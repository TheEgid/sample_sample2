services:
  fullstack:
    build:
      context: fullstack
      dockerfile: Dockerfile
    container_name: fullstack_container
    ports:
      - "127.0.0.1:3007:3007"
    restart: on-failure
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl","-f","http://localhost:3007/api/healthcheck"]
      interval: 5s
      timeout: 3s
      retries: 2
      start_period: 30s
    volumes:
      - ./fullstack/prisma:/app/prisma
      - ./sqlite-db:/sqlite-db
    command: >
      sh -c "if [ \"$$DOCKER_ENV\" = \"true\" ]; then
        while ! nc -z postgres 5432; do
          sleep 1;
          echo 'Waiting for PostgreSQL...';
        done;
      fi;
      pnpm start"

  postgres:
    image: postgres:15-alpine
    container_name: full_db_postgres
    volumes:
      - database_volume:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf
      - ./log/nginx:/var/log/nginx
    environment:
      TZ: "Europe/Moscow"
    depends_on:
      fullstack:
        condition: service_healthy

  sqltranslator:
    container_name: sqltranslator_container
    build:
      context: ./sqltranslator
      dockerfile: Dockerfile
    working_dir: /app/backup
    entrypoint: ["sh", "-c"]
    tty: true
    stdin_open: true
    volumes:
      - ./backup:/app/backup


volumes:
  database_volume:
