
services:
  main-applic:
    build:
      context: main-applic
      dockerfile: Dockerfile
    container_name: main-applic_container
    ports:
      - "127.0.0.1:3006:3006"
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    environment:
      TZ: "Europe/Moscow"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3006/api/healthcheck"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    volumes:
      - ./main-applic/public/temporary:/app/public/temporary
      - ./main-applic/prisma:/app/prisma

  nginx:
    image: nginx:1.27.5-alpine
    container_name: nginx_container
    ports:
      - "80:80"
    volumes:
      - ./main-applic/public/temporary:/opt/files
      - ./log/report:/opt/report
      - ./.htpasswd:/opt/.htpasswd
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf
      - ./log/nginx:/var/log/nginx
    environment:
      TZ: Europe/Moscow
    depends_on:
      main-applic:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:80/health"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  postgres:
    build:
      context: postgres-db
      dockerfile: Dockerfile
    container_name: db_postgres_container
    volumes:
      - database_volume:/var/lib/postgresql/data
      # - ./main-applic/prisma:/app
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: "${MY_DB_NAME_DEV}"
      POSTGRES_USER: "${MY_DB_USER_DEV}"
      POSTGRES_PASSWORD: "${MY_DB_PASSWORD_DEV}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${MY_DB_USER_DEV} -d ${MY_DB_NAME_DEV}"
        ]
      interval: 5s
      timeout: 3s
      retries: 2
      start_period: 5s

volumes:
  database_volume:
