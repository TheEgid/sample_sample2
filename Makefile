include ./main-applic/.env
export

COMPOSE_BAKE=true

LANG=ru_RU.UTF-8


all: run clean import_to_postgres


run:
	@docker compose build
	@docker compose up -d
	@docker ps


runner:
	@docker compose up


stop:
	@docker compose down


clean:
	@docker system prune -f
	@docker system prune -f --volumes


up:
	@sudo dnf --refresh update && sudo dnf upgrade


SQLITE_DATABASE := ./main-applic/prisma/database-sql-lite.db
POSTGRES_CONTAINER := db_postgres_container
IMPORT_LOAD_TEMPLATE=import.load.tpl
IMPORT_LOAD=import.load

IMPORT_UNLOAD_TEMPLATE=import.unload.tpl
IMPORT_UNLOAD=import.unload


import_to_postgres:
	@if [ ! -f "$(SQLITE_DATABASE)" ]; then \
		echo "‚ùå –§–∞–π–ª SQLite –±–∞–∑—ã $(SQLITE_DATABASE) –Ω–µ –Ω–∞–π–¥–µ–Ω!"; \
		exit 1; \
	fi
	@if [ ! -s "$(SQLITE_DATABASE)" ]; then \
		echo "‚ùå –§–∞–π–ª SQLite –±–∞–∑—ã $(SQLITE_DATABASE) –ø—É—Å—Ç–æ–π!"; \
		exit 1; \
	fi
	@if ! docker ps --filter "name=$(POSTGRES_CONTAINER)" --filter "status=running" | grep -q $(POSTGRES_CONTAINER); then \
		echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $(POSTGRES_CONTAINER) –Ω–µ –∑–∞–ø—É—â–µ–Ω!"; \
		exit 1; \
	fi
	@echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º SQLite –±–∞–∑—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $(POSTGRES_CONTAINER)..."
	@docker cp $(SQLITE_DATABASE) $(POSTGRES_CONTAINER):/app/database-sql-lite.db
	@echo "üöÄ –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ pgloader —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∑–∞–ø—É—Å–∫ –æ—Ç root)..."
	@docker exec -u root $(POSTGRES_CONTAINER) /bin/bash -c 'NODE_PATH=$$(npm root -g) node /render_template.js import.load.tpl'
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º pgloader –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $(POSTGRES_CONTAINER)..."
	@docker exec -i $(POSTGRES_CONTAINER) pgloader /import.load || (echo "‚ùå –û—à–∏–±–∫–∞ pgloader!"; exit 1)
	@echo "üßπ –£–¥–∞–ª—è–µ–º SQLite-–±–∞–∑—É –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	@docker exec -u root $(POSTGRES_CONTAINER) rm -f /app/database-sql-lite.db /import.load
	@echo "üßπ –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π SQLite-—Ñ–∞–π–ª..."
	@rm -f $(SQLITE_DATABASE)
	@echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"


import_to_sqlite:
	@if ! docker ps --filter "name=$(POSTGRES_CONTAINER)" --filter "status=running" | grep -q $(POSTGRES_CONTAINER); then \
		echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $(POSTGRES_CONTAINER) –Ω–µ –∑–∞–ø—É—â–µ–Ω!"; \
		exit 1; \
	fi
	@echo "üöÄ –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ import.unload.tpl –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $(POSTGRES_CONTAINER)..."
	@docker cp postgres-db/$(IMPORT_UNLOAD_TEMPLATE) $(POSTGRES_CONTAINER):/$(IMPORT_UNLOAD_TEMPLATE)
	@echo "üöÄ –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ pgloader —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∑–∞–ø—É—Å–∫ –æ—Ç root)..."
	@docker exec -u root $(POSTGRES_CONTAINER) /bin/bash -c 'cp /$(IMPORT_UNLOAD_TEMPLATE) /import.load && NODE_PATH=$$(npm root -g) node /render_template.js import.unload.tpl'
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º pgloader –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $(POSTGRES_CONTAINER)..."
	@docker exec -i $(POSTGRES_CONTAINER) pgloader /import.load || (echo "‚ùå –û—à–∏–±–∫–∞ pgloader!"; exit 1)
	@echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º SQLite –±–∞–∑—É –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ —Ö–æ—Å—Ç..."
	@docker cp $(POSTGRES_CONTAINER):/app/database-sql-lite.db $(SQLITE_DATABASE)
	@echo "üßπ –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	@docker exec -u root $(POSTGRES_CONTAINER) rm -f /app/database-sql-lite.db /import.load /$(IMPORT_UNLOAD_TEMPLATE)
	@echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ë–∞–∑–∞ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ SQLite: $(SQLITE_DATABASE)"


BACKUP_DIR := $(shell pwd)/backup
BACKUP_FILE_CONTAINER := /app/backup/postgres_backup_$(shell date +%F_%H-%M-%S).dump


backup_postgres:
	@if ! docker ps --filter "name=$(POSTGRES_CONTAINER)" --filter "status=running" | grep -q $(POSTGRES_CONTAINER); then \
		echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $(POSTGRES_CONTAINER) –Ω–µ –∑–∞–ø—É—â–µ–Ω!"; \
		exit 1; \
	fi
	@echo "üöÄ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .env..."
	@PG_USER=$(MY_DB_USER_DEV); \
	PG_PASS=$(MY_DB_PASSWORD_DEV); \
	PG_DB=$(MY_DB_NAME_DEV); \
	echo "–°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –±—ç–∫–∞–ø–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."; \
	docker exec $(POSTGRES_CONTAINER) mkdir -p /app/backup; \
	echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º pg_dump –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."; \
	docker exec -e PGPASSWORD=$$PG_PASS $(POSTGRES_CONTAINER) pg_dump -U $$PG_USER -F c -b -v -f $(BACKUP_FILE_CONTAINER) $$PG_DB; \
	echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $(BACKUP_FILE_CONTAINER) –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $(POSTGRES_CONTAINER)"; \
	echo "–°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –±—ç–∫–∞–ø–æ–≤ –Ω–∞ —Ö–æ—Å—Ç–µ: $(BACKUP_DIR)"; \
	mkdir -p $(BACKUP_DIR); \
	echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º –±—ç–∫–∞–ø –Ω–∞ —Ö–æ—Å—Ç..."; \
	docker cp $(POSTGRES_CONTAINER):$(BACKUP_FILE_CONTAINER) $(BACKUP_DIR)/; \
	echo "‚úÖ –ë—ç–∫–∞–ø —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ $(BACKUP_DIR)/"; \
